version: '3.6'

services:
  db:
    build:
      context: "mysql"
      dockerfile: Dockerfile
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    networks:
      - backend
  php:
    build:
      context: "php"
      dockerfile: Dockerfile
      args:
         - LOCAL_UID=${LOCAL_UID}
         - LOCAL_GID=${LOCAL_GID}
    container_name: ${COMPOSE_PROJECT_NAME}
    working_dir: ${WORKING_DIR}
    environment:
      - PHP_IDE_CONFIG=serverName=localhost
    volumes:
      - ./php/php-ini-overrides.ini:/usr/local/etc/php/conf.d/infrastructure-overrides.ini
      - ../${SYMFONY_APP_PATH}:${WORKING_DIR}
    networks:
      - backend
    depends_on:
      - db
  frontend:
    image: node:lts-alpine3.14
    working_dir: ${WORKING_DIR}
    ports:
      - "${LOCAL_FRONT_PORT}:8081"
    expose:
      - "${LOCAL_FRONT_PORT}"
    environment:
      - .env
    volumes:
      - "${HOST_APP_DIR}:${IMAGE_WORKDIR}"
    tty: true
  web:
    image: nginx:alpine
    working_dir: ${WORKING_DIR}
    container_name: web_server
    environment:
      - VIRTUAL_HOST=localhost
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ../${SYMFONY_APP_PATH}:${WORKING_DIR}
    ports:
      - "${WEB_LOCAL_PORT_HTTP}:80"
      - "${WEB_LOCAL_PORT_HTTPS}:443"
    depends_on:
      - php
      - db
    networks:
      - backend
      - frontend
networks:
  default:
    external:
      name: cqrs-training
  backend:
    name: custom_backend
  frontend:
    name: custom_frontend
